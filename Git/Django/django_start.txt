1) .gitignore 파일 생성

2) 가상환경
2-1) python -m venv venv
2-2) source venv/Script/activate

3) 장고 설치
3-1) pip install django==3.2

4) 패키지 리스트 생성
4-1) pip freeze > requirements.txt

5) 장고 프로젝트 생성
5-1) django-admin startproject 프로젝트폴더명 .

6) 장고 앱 생성
6-1) python manage.py startapp 앱이름
6-2) settings.py에 앱 등록

7) templates > base.html (bootstrap 추가)
7-1) block 태그 추가
7-2) settings.py에 templates 폴더 추가
7-3) BASE_DIR / 'templates'

8) url 분리
8-1) 앱 폴더에 urls.py 파일 생성
8-2) from django.urls import path
      from . import views
8-3) app_name = '앱 이름'
8-4) urlpatterns = [ ]
8-5) 프로젝트 폴더의 urls.py에 앱 url.py 등록

9) models.py에 클래스 정의
9-1) class 모델이름(models.Model):
9-2) 필드 구성
9-3) title = models.CharField(max_length=10)
      content = models.TextField()
9-4) DB에 적용
9-5) python manage.py makemigrations
      python manage.py migrate

10) model form 생성
10-1) from django import forms
        from .models import 모델이름
10-2) class 모델폼이름(forms.ModelForm):
10-3) 필드 구성
10-4) class Meta:
	model = 모델이름
	fields = '__all__'

11) app accounts 생성, 등록
11-1) url 분리, 등록

12) accounts > models.py 에 AbstractUser를 상속받는 커스텀 User 클래스 작성
12-1) from django.contrib.auth.models import AbstractUser
12-2) class User(AbstractUser):
12-3) settings.py에 AUTH_USER_MODEL = 'accounts.User' 등록

13) accounts > admin.py에 커스텀 User 모델 등록
13-1) from django.contrib.auth.admin import UserAdmin
        from .models import User
13-2) admin.site.register(User, UserAdmin)


** 프로젝트 중간일 경우 **
데이터베이스 초기화 후 마이그레이션
1. migrations 파일 삭제
 * migrations 폴더 및 __init__.py 는 삭제하지 않음
 * 번호가 붙은 파일만 삭제
2. db.sqlite3 삭제
3. migrations 진행
 * makemigrations
 * migrate

14) 관리자 아이디, 비번 생성
14-1) python manage.py createsuperuser

accounts에 login만들기
base.html에 